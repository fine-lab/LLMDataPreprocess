from faker import Faker
from faker.providers import BaseProvider, ElementsType
import random


# 创建自定义Provider
class MyProvider(BaseProvider):
    # address_formats: ElementsType[str] = ("{{street_address}} {{postcode}} {{city}}",)
    provider_dict = {
        "start": ["厨房", "麦当劳", "演唱会", "银行", "植物园", "视频网站", "霍格沃茨", "生物实验室", "图书馆", "医院"],
        # 厨房
        "厨房": ["刀具", "烹饪器具", "餐具", "厨房电器", "储存容器", "烹饪调味料", "生鲜食材", "清洁用品"],
        # 模块一级
        "刀具": ["菜刀", "砧板"],
        "烹饪器具": ["锅", "烤盘", "砧板", "切菜板", "烤架"],
        "餐具": ["碗", "盘子", "杯子"],
        "厨房电器": ["微波炉", "烤箱", "油烟机", "咖啡机"],
        "储存容器": ["保鲜盒", "密封袋", "玻璃罐"],
        "烹饪调味料": ["盐", "胡椒", "酱油", "食用油", "香料"],
        "生鲜食材": ["蔬菜", "水果", "肉类", "鱼类", "奶制品"],
        "清洁用品": ["洗碗液", "洗洁精", "抹布", "清洁刷"],
        # 模块二级
        "锅": ["平底锅", "炒锅", "蒸锅"],
        "蔬菜": ["青菜", "胡萝卜", "西兰花", "番茄", "土豆"],
        "水果": ["苹果", "香蕉", "橙子", "葡萄", "草莓"],
        "肉类": ["牛肉", "猪肉", "鸡肉", "羊肉", "火腿"],
        "鱼类": ["鲑鱼", "鲈鱼", "鲳鱼", "鲫鱼", "草鱼"],
        "奶制品": ["牛奶", "酸奶", "奶酪", "黄油", "鲜奶油"],
        # 麦当劳
        "麦当劳": ["早安套餐", "儿童套餐", "学生套餐", "多人套餐"],
        # 模块一级
        "早安套餐": ["豆浆", "麦满分", "薯饼", "培根蛋饼"],
        "儿童套餐": ["薯条", "儿童汉堡", "玉米杯", "苹果片"],
        "学生套餐": ["脆脆贡菜卷", "麦乐鸡块"],
        "多人套餐": ["麦辣鸡翅", "汉堡", "麦麦脆汁鸡", "饮料", "甜食"],
        # 模块二级
        "甜食": ["香芋派", "菠萝派", "巧克力派", "麦旋风"],
        "饮料": ["可乐", "雪碧", "冰红茶", "红茶", "橙汁", "美式咖啡", "拿铁咖啡"],
        "薯条": ["迷你薯条", "小薯", "中薯", "大薯"],
        "汉堡": ["板烧鸡腿堡", "麦辣鸡腿堡", "麦香鸡", "巨无霸", "双层鳕鱼堡"],
        # 演唱会
        "演唱会": ["看台区", "vip区"],
        # 模块一级
        "看台区": ["399区域", "599区域", "799区域"],
        "vip区": ["1399区域", "1599区域"],
        # 银行
        "银行": ["财务服务", "投资产品", "线上银行服务", "其他服务"],
        # 模块一级
        "财务服务": ["储蓄账户", "支票账户", "信用卡", "贷款服务"],
        "投资产品": ["股票", "债券", "基金", "保险产品"],
        "线上银行服务": ["网上银行", "手机银行", "电子账单"],
        "其他服务": ["汇款服务", "外汇服务", "贵金属交易"],
        # 模块二级
        "储蓄账户": ["活期账户", "定期存款账户"],
        "支票账户": ["个人支票账户", "商业支票账户"],
        "信用卡": ["普通信用卡", "金卡", "白金卡", "商业信用卡"],
        "贷款服务": ["个人贷款", "房屋贷款", "汽车贷款", "商业贷款"],
        "股票": ["普通股票", "优先股票"],
        "债券": ["国债", "企业债", "可转债"],
        "基金": ["股票型基金", "债券型基金", "混合型基金"],
        "保险产品": ["寿险", "医疗保险", "车险", "财产保险"],
        "汇款服务": ["国内汇款", "国际汇款"],
        "外汇服务": ["外汇兑换", "外汇存款"],
        "贵金属交易": ["黄金", "白银", "铂金"],
        # 植物园
        "植物园": ["展示区", "教育区", "休闲区"],
        # 模块一级
        "展示区": ["热带植物区", "沙漠植物区", "水生植物区", "盆景区", "草坪花园"],
        "教育区": ["植物科普展示", "植物生态解说", "种子培育区", "植物医院"],
        "休闲区": ["观景台", "步行小道", "凉亭", "咖啡馆", "书店"],
        # 视频网站
        "视频网站": ["电影", "电视剧", "综艺节目", "纪录片", "动画", "短片", "原创"],
        # 模块一级
        "电影": ["动作片", "喜剧片", "爱情片", "科幻片", "恐怖片", "剧情片", "动画片"],
        "电视剧": ["国产剧", "海外剧", "网络剧", "偶像剧", "古装剧", "言情剧"],
        "综艺节目": ["真人秀", "脱口秀", "选秀节目", "访谈节目", "音乐节目", "游戏节目"],
        "纪录片": ["自然纪录片", "历史纪录片", "科学纪录片", "人物纪录片", "社会纪实", "文化纪录片"],
        "动画": ["动画电影", "动画剧集", "儿童动画"],
        "短片": ["微电影", "MV", "广告短片", "创意短片", "实验短片", "纪录短片"],
        "原创": ["自制剧", "原创综艺", "个人短片", "原创音乐", "独立电影", "原创动画"],
        # 霍格沃茨
        "霍格沃茨": ["魔法书籍", "魔法工具", "学习用具", "魔法药剂", "魔法生物", "魔法装置", "特殊食物", "宿舍用品", "课堂设备", "运动器材"],
        # 模块一级
        "魔法书籍": ["魔咒书", "咒语手册", "魔法历史", "魔法植物与药草"],
        "魔法工具": ["魔法杖", "魔法帽", "魔法球", "魔法衣服"],
        "学习用具": ["羽毛笔", "墨水瓶", "纸张", "笔记本"],
        "魔法药剂": ["万圣药剂", "变形药剂", "治愈药剂", "复活药剂"],
        "魔法生物": ["飞天扫帚", "宠物蛙", "魔法猫", "魔法鸟"],
        "魔法装置": ["时光转器", "隐形斗篷", "发光小球", "传送门"],
        "特殊食物": ["魔法巧克力", "魔法糖果", "魔法果汁", "魔法饼干"],
        "宿舍用品": ["床铺", "梳妆台", "衣橱", "书桌"],
        "课堂设备": ["黑板", "实验器具", "魔法石碑", "魔法显微镜"],
        "运动器材": ["飞天扫帚球", "魔法棒球", "巫师橄榄球", "飞天滑板"],
        # 生物实验室
        "生物实验室": ["实验设备", "实验耗材", "安全设备", "实验文具"],
        # 模块一级
        "实验设备": ["显微镜", "离心机", "PCR仪", "电泳仪", "分光光度计"],
        "实验耗材": ["试剂", "培养皿", "试管", "移液器"],
        "安全设备": ["生物安全柜", "实验室手套", "防护眼镜"],
        "实验文具": ["笔记本", "标签", "笔"],
        # 模块二级
        "显微镜": ["光学显微镜", "电子显微镜"],
        "离心机": ["台式离心机", "高速离心机"],
        "PCR仪": ["实时荧光定量PCR仪", "普通PCR仪"],
        "电泳仪": ["水平电泳仪", "垂直电泳仪"],
        "分光光度计": ["紫外可见分光光度计", "荧光分光光度计"],
        "试剂": ["核酸提取试剂", "蛋白质提取试剂", "PCR试剂盒"],
        "培养基": ["细菌培养基", "细胞培养基", "真菌培养基"],
        "试管": ["常规试管", "离心管", "PCR管"],
        "实验室手套": ["乳胶手套", "Nitrile手套", "Vinyl手套"],
        # 图书馆
        "图书馆": ["图书", "期刊", "参考资料", "多媒体资料", "报纸", "地图和地理资料", "历史档案", "文献综述", "学位论文"],
        # 模块一级
        "图书": ["小说", "非小说类"],
        "期刊": ["学术期刊", "流行期刊"],
        "参考资料": ["词典", "百科全书", "地图", "工具书"],
        "多媒体资料": ["光盘", "DVD", "CD", "磁带"],
        "报纸": ["国内报纸", "国际报纸"],
        "地图和地理资料": ["地图集", "地理手册", "地球仪"],
        "历史档案": ["历史文献", "古籍", "档案文件"],
        "文献综述": ["学术论文综述", "期刊文献综述"],
        "学位论文": ["硕士论文", "博士论文"],
        # 模块二级
        "小说": ["文学类小说", "推理小说", "言情小说", "科幻小说"],
        "非小说类": ["文学评论", "历史", "地理", "哲学", "科学", "艺术", "经济学"],
        "学术期刊": ["自然科学", "人文社科", "医学", "工程技术"],
        "流行期刊": ["时尚", "娱乐", "健康"],
        # 医院
        "医院": ["医疗设备", "药品", "医疗用品", "医护人员"],
        # 模块一级
        "医疗设备": ["医用器械", "药品", "医疗用品", "医护人员"],
        "药品": ["非处方药", "处方药", "中药"],
        "医疗用品": ["消毒用品", "救护用品"],
        "医护人员": ["医生", "护士", "药剂师", "医技人员"],
        # 模块二级
        "医用器械": ["手术刀", "注射器", "钳子", "吸引器"],
        "诊断设备": ["X光机", "CT扫描仪", "MRI机", "超声波仪器"],
        "监护设备": ["心电图机", "呼吸机", "血压计", "血糖仪"],
        "治疗设备": ["输液泵", "雾化器", "体外循环机"],
        "非处方药": ["感冒药", "止痛药", "消炎药", "维生素", "退烧药"],
        "处方药": ["抗生素", "镇痛药", "抗病毒药", "抗癌药", "心脏药"],
        "中药": ["中药颗粒", "中药饮片", "中药汤剂", "中药丸剂", "中成药"],
        "消毒物品": ["酒精", "碘酒", "消毒纱布", "消毒棉球"],
        "救护用品": ["担架", "急救箱", "止血带", "救生衣"],
        "医生": ["主治医生", "专家医生", "实习医生"],
        "护士": ["护士长", "执业护士", "实习护士"],
        "药剂师": ["药房主任", "药剂师助理"],
        "医技人员": ["放射技师", "检验师", "药剂师"],
    }

    def area_module(self):
        # 一级领域
        first_a = self.random_element(self.provider_dict["start"][:5])
        # 二级领域
        second_a = self.random_element(self.provider_dict[first_a])
        # 模块一级
        first_m = self.random_element(self.provider_dict[second_a])
        # 模块二级
        if first_m in self.provider_dict:
            second_m = self.random_element(self.provider_dict[first_m])
        else:
            second_m = ""
        return [first_a, second_a, first_m, second_m]  # 返回list


if __name__ == "__main__":
    # 添加Provider
    fake = Faker("zh-CN")
    fake.add_provider(MyProvider)
    print(fake.company())
    # for i in range(10):
    #     print(fake.area_module())
